apply plugin: 'com.android.application'

android {
    compileSdkVersion 23
    buildToolsVersion "22.0.1"

    repositories {
        flatDir {
            dirs 'libs'
        }
    }

    defaultConfig {
        applicationId "com.Nanali.Timefish"
        minSdkVersion 10
        targetSdkVersion 22
        versionCode 12
        versionName "2.05"
    }

    sourceSets.main {
        java.srcDir "src"
        res.srcDir "res"
        jniLibs.srcDir "libs"
        aidl.srcDirs = ['src/main/aidl']
        manifest.srcFile "AndroidManifest.xml"
        assets.srcDir "assets"
    }

    signingConfigs {

        release {
            if (project.hasProperty("RELEASE_STORE_FILE")) {
                storeFile file(RELEASE_STORE_FILE)
                storePassword RELEASE_STORE_PASSWORD
                keyAlias RELEASE_KEY_ALIAS
                keyPassword RELEASE_KEY_PASSWORD
            }
        }
    }

    lintOptions {

        checkReleaseBuilds false

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            if (project.hasProperty("RELEASE_STORE_FILE")) {
                signingConfig signingConfigs.release
            }
        }
    }
    sourceSets { main { aidl.srcDirs = ['src/main/aidl', 'src/main/aidl/'] } }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(':libcocos2dx')
    compile 'com.google.android.gms:play-services-basement:9.4.0'
    compile 'com.google.android.gms:play-services-ads:9.4.0'
    compile 'com.google.android.gms:play-services-drive:9.4.0'
    compile 'com.google.android.gms:play-services-games:9.4.0'
    compile 'com.google.android.gms:play-services-plus:9.4.0'
    compile 'com.flurry.android:analytics:6.3.1'
    compile files('libs/tapjoyconnectlibrary.jar')
    compile(name: 'PlanetArcadesdk-1.1', ext: 'aar')
    compile project(':unity-ads')
}

task cleanAssets(type: Delete) {
    delete 'assets'
}
task copyAssets(type: Copy) {
    from '../../Resources'
    into 'assets'
}

clean.dependsOn cleanAssets
preBuild.dependsOn copyAssets
